<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <% if(locals.gameOver) { %>
        <h1>Game Over!</h1>
        <p>Your score is <%= locals.points %></p>
        <form action="/" method="get">
            <input type="submit" value="Play Again">
        </form>
    <% } else { %>
        <% if (!locals.submit) { %>
            <h1>Start Game!</h1>
            <form action="/" method="post" onsubmit="return validateForm()">
                <input type="checkbox" name="Noun/Pronoun" id="N&P">
                <label for="N&P">Noun/Pronoun</label>
                <input type="checkbox" name="Adjective" id="ADJ">
                <label for="ADJ">Adjective</label>
                <input type="checkbox" name="Verb" id="VRB">
                <label for="VRB">Verb</label>
                <input type="hidden" name="word" value="<%= locals.word %>">
                <input type="submit" value="Start">
            </form>
        <% } else { %>
            <p id="timer">10</p>
            <form id="timerForm" action="/" method="post" style="display: none;">
                <input type="hidden" name="message" value="Timer ended">
            </form>
            <p style="font-weight: bold; color: rgb(47, 255, 89); font-size: 40px">Points : <%= locals.points || '0' %></p>
            <h1 id="word" style="display: inline;"><%= locals.word %></h1>
            <button onclick="pronounceWord('word')">pronounce</button>
            <% if(locals.error) { %>
                <h2 style="color: red;" id="error"><%= locals.error %></h2>
            <% } %>
            <form action="/" method="post">
                <input type="text" name="User Input" id="userip" required>
                <input type="button" value="pronounce" onclick="pronounceWord('userip')">
                <input type="hidden" name="word" value="<%= locals.word %>">
                <input type="submit" value="submit">
            </form>
            <button id="record" onclick="liveTranscript('record', 'userip')">record</button>
        <% } %>
    <% } %>
</body>

<script>
    function validateForm() {
        var checkboxes = document.querySelectorAll('input[type="checkbox"]');
        var checked = Array.prototype.slice.call(checkboxes).some(x => x.checked);
        if (!checked) {
            alert("Please select at least one checkbox.");
            return false;
        }
        return true;
    }

    function pronounceWord(elementId) {
        var word = document.getElementById(elementId).innerText || document.getElementById(elementId).value;
        var utterance = new SpeechSynthesisUtterance(word);
        speechSynthesis.speak(utterance);
    }

    function liveTranscript(buttonId, resultDivId) {
        const recognition = new webkitSpeechRecognition();
        const voiceButton = document.getElementById(buttonId);
        const resultDiv = document.getElementById(resultDivId);

        recognition.start();

        recognition.onresult = (event) => {
            const transcript = event.results[0][0].transcript;
            resultDiv.value = transcript.split(' ').join('');
        };
    }

    const textInput = document.getElementById('userip');
    textInput.addEventListener('input', function() {
        const value = this.value
        if(/\s/.test(value)) {
            this.value = value.replace(/\s/g, '')
            alert("Whitespace characters are not allowed.")
        }
    })

    if(document.getElementById('error')) {
        setTimeout(() => {
            document.getElementById('error').remove();
        }, 3000);
    }

    let timeLeft;
    const x = 'timerValue';

    if (!document.getElementById('error')) {
        timeLeft = 10;
    } else {
        document.getElementById('timer').textContent = localStorage.getItem(x);
        timeLeft = parseInt(localStorage.getItem(x)) || 10;
    }

    const timerElement = document.getElementById('timer');
    const timerForm = document.getElementById('timerForm');

    const timerInterval = setInterval(() => {
        --timeLeft;
        localStorage.setItem(x, timeLeft.toString());
        timerElement.textContent = timeLeft;

        if (timeLeft <= 0) {
            clearInterval(timerInterval);
            timerForm.submit();
        }
    }, 1000);

    
</script>

</html>